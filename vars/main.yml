--
# a unix path-friendly name (IE, no spaces or special characters)
project_name: my_project

# the base path to install to. You should not need to change this.
install_root: /srv

# the python module path to your project's wsgi file. E.g. for a directory
# layout like this (assuming 'my_project' is the project_name and top level
# directory name):

# my_project
# ├──App
#	 ├── backend
#	 ├── dashboard
#	 ├── My_App
#	 ├		├─ _init__.py
#	 ├		├── settings.py
#	 ├		├── urls.py
#	 ├		└── wsgi.py
#	 ├── manage.py
#	 └── requirements.txt

wsgi_module: showcase_server.wsgi

# any directories that need to be added to the PYTHONPATH.
pythonpath: "{{ install_root }}/{{ project_name }}/my_app"

project_repo: "****************************************************"

# The value of your django project's STATIC_ROOT settings.
# This will be the directory that django's `collectstatic` management command
# copies static files to, and it must be an absolute path. The default value 
# here assumes that STATIC_ROOT is set in your settings.py like so:
# STATIC_ROOT = os.path.abspath(os.path.join(BASE_DIR, 'static'))
static_root: "{{ install_root }}/{{ project_name }}/static"
virtualenv_dir: /srv/my_project/my_app/venv"

# the dns name or names (space separated) for your server
server_name: localhost

# database setup. Note that because this playbook doesn't touch the default 
# postgres pg_hba.conf file, we use local password-based authentication for
# postgres and thus you need to provide a username and password, and your
# settings.py MUST set "localhost" or "127.0.0.1" as the HOST value. For
# example, the default settings here assume the following values in
# settings.py:
#
# DATABASES = {
#     #'default': {
#     #    'ENGINE': 'django.db.backends.sqlite3',
#     #    'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
#     #}
#     'default': {
#         'ENGINE': 'django.db.backends.postgresql_psycopg2',
#         'NAME': '',
#         'USER': '',
#         'PASSWORD': '',
#         'HOST':'',
#         'PORT':,
#     }
# }

db_user: **************
db_name: **************
db_password: **************
db_host: **************

# apt packages, you should not need to change this unless you have packages
# listed in your requirements.txt that depend on system packages.
system_packages:
  - python-pip
  - python-dev
  - python-psycopg2
  - git

# vim:ft=ansible:

update_apt_cache: true

